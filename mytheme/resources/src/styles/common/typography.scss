/* purgecss start ignore */
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin-bottom: 1em;
  font-feature-settings: "palt";
  line-height: var(--leading-md);

  ruby {
    display: inline-block;
    margin-left: 0.25em;
    font-size: 50%;
  }

  & + .hr {
    margin-top: -0.5em;
  }
}

@for $i from 1 through 6 {
  h#{$i},
  .h#{$i} {
    @if $i < 4 {
      font-size: calc(0.8 * var(--h#{$i}-font-size));
    }
    // 1rem
    @else {
      font-size: var(--h#{$i}-font-size);
    }

    @include mq($from: md) {
      font-size: var(--h#{$i}-font-size);
    }
  }
}

@for $i from 1 to 9 {
  .fontDisplay-#{$i} {
    font-size: calc(0.76 * var(--font-display-#{$i}));

    @include mq($from: lg) {
      font-size: var(--font-display-#{$i});
    }
  }
}

@for $i from 1 to 4 {
  .fontDisplay-ex-#{$i} {
    font-size: calc(0.76 * var(--font-display-#{$i}));

    @include mq($from: lg) {
      font-size: var(--font-display-#{$i});
    }
  }
}

/* purgecss end ignore */

.lead {
  line-height: var(--leading-md);

  @include mq($from: lg) {
    font-size: var(--font-size-lg);
    line-height: var(--leading-xl);
  }
}

.leading-xs {
  line-height: var(--leading-xs);
}

.leading-sm {
  line-height: var(--leading-sm);
}

.leading-md {
  line-height: var(--leading-md);
}

.leading-lg {
  line-height: var(--leading-lg);
}

.leading-xl {
  line-height: var(--leading-xl);
}

.text-normal {
  font-weight: var(--font-weight-regular);
}

.text-medium {
  font-weight: var(--font-weight-medium);
}

.text-bold {
  font-weight: var(--font-weight-bold) !important;
}

.text-black {
  font-weight: var(--font-weight-black) !important;
}

.text-sansSerif-en {
  font-family: var(--font-sans-serif-en);
}

.text-serif-en {
  font-family: var(--font-serif-en);
}

.text-size-xs {
  font-size: rem(10px);

  @include mq($from: lg) {
    font-size: var(--font-size-xs);
  }
}

.text-size-sm {
  font-size: var(--font-size-xs);

  @include mq($from: lg) {
    font-size: var(--font-size-sm);
  }
}

.text-size-md {
  font-size: var(--font-size-sm);

  @include mq($from: lg) {
    font-size: var(--font-size);
  }
}

.text-size-ex-lg {
  font-size: rem(17px);

  @include mq($from: lg) {
    font-size: rem(22px);
  }
}

.text-size-lg {
  font-size: 1rem;

  @include mq($from: lg) {
    font-size: var(--font-size-lg);
  }
}

.text-size-xl {
  font-size: var(--font-size-lg);

  @include mq($from: lg) {
    font-size: var(--font-size-xl);
  }
}

.text-size-xxl {
  font-size: var(--font-size-xl);

  @include mq($from: lg) {
    font-size: var(--font-size-xxl);
  }
}

.text-size-xxxl {
  font-size: rem(45px);

  @include mq($from: lg) {
    font-size: rem(52px);
  }
}

.text-extra-lead {
  font-size: rem(17px);
  font-weight: var(--font-weight-medium);
  line-height: 1.765;

  @include mq($from: lg) {
    font-size: var(--font-size-xl);
  }
}

.text-emphasis {
  font-size: 140%;
}

.text-center {
  text-align: center !important;
}

.text-center-md {
  @include mq($from: md) {
    text-align: center;
  }
}

.text-center-lg {
  @include mq($from: lg) {
    text-align: center;
  }
}

.text-center-md-left {
  text-align: center;

  @include mq($from: md) {
    text-align: left;
  }
}

.text-center-lg-left {
  text-align: center;

  @include mq($from: lg) {
    text-align: left;
  }
}

.text-justify {
  text-align: justify;
  // text-justify: inter-ideograph;
}

.text-left {
  text-align: left !important;
}

.text-right {
  text-align: right !important;
}

.text-hide {
  font-size: 0;
  color: transparent;
}

.text-block {
  & > span {
    display: block;
  }
}

.text-block-md {
  & > span {
    display: inline-block;

    @include mq($from: md) {
      display: block;
    }
  }
}

.text-block-lg {
  & > span {
    display: inline-block;

    @include mq($from: lg) {
      display: block;
    }
  }
}

.text-lg-bottom-margin {
  margin-bottom: 2em;
}

.text-autoLine {
  & > span {
    display: inline-block;
  }
}

.text-autoCentering {
  display: inline-block;
  text-align: initial !important;
}

.text-b-1 {
  margin-bottom: 1em;
}

.text-color {
  color: var(--color-text);
}

.text-color-primary {
  color: var(--color-primary) !important;
}

.text-color-light {
  color: var(--color-light) !important;
}

.text-color-base {
  color: var(--color-base) !important;
}

.text-color-border {
  color: var(--color-border);
}

.text-color-danger {
  color: var(--color-danger);
}

.text-maker {
  background: 4px (transparent 60%, #ff6 60%);
}

.text-emphasis-sansSerif {
  font-family: var(--font-sans-serif-en);
}

.line-height-narrow {
  line-height: 1.4;
}

.text-underline {
  text-decoration: underline;
}

.text-lineThrough {
  text-decoration: line-through;
}

.line-crump-1 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@for $i from 2 to 5 {
  .line-crump-#{$i} {
    display: -webkit-box;
    overflow: hidden;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $i;
  }
}

.bracketsText {
  display: block;
  display: flex;
  align-items: center;
  justify-content: center;
}

.bracketsText__body {
  position: relative;
  padding: var(--spacer);
  background-image: url(../images/_inline/bracket-top-left.svg),
    url(../images/_inline/bracket-bottom-right.svg);
  background-repeat: no-repeat, no-repeat;
  background-position: top left, bottom right;
  background-size: 0.75em, 0.75em;

  @include mq($from: lg) {
    padding-right: var(--spacer-lg);
    padding-left: var(--spacer-lg);
  }
}
