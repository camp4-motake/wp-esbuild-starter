// マスクテキストスライドイン
[data-transition-mask-text] {
  display: inline-block;
  overflow: hidden;

  > span {
    position: relative;
    display: block;
    min-height: 1em;
    transition: transform 0.8s var(--ease-out-circ) 0.2s;
    transform: translateY(101%);
    will-change: transform;
  }
}

.js-is-loaded [data-scroll="in"] [data-transition-mask-text] {
  > span {
    transform: translateY(0);
  }
}

// [data-scroll][data-mikan="mask-transition"] {
//   visibility: hidden;
// }

// [data-scroll="in"][data-mikan="mask-transition"] {
//   visibility: visible;
// }

// 下からフェードイン
.transition-bottomIn {
  opacity: 0;
  transition: transform 0.4s var(--ease-out-circ), opacity 0.4s;
  transform: translateY(2rem);
  will-change: opacity, transform;
}

.js-is-loaded [data-scroll="in"].transition-bottomIn {
  opacity: 1;
  transform: translateY(0);
}

// 下からフェードイン - スタッガー
.transition-stagger .transition-bottomIn {
  --delay: calc(var(--list-index) * 0.1s);

  &.is-stagger {
    transition-delay: var(--delay), var(--delay);
  }

  @include mq($from: md) {
    &.is-stagger-md {
      transition-delay: var(--delay), var(--delay);
    }
  }
  @include mq($from: lg) {
    &.is-stagger-lg {
      transition-delay: var(--delay), var(--delay);
    }
  }
}

.js-is-loaded [data-scroll="in"].transition-staggerWrapper {
  .transition-staggerBottomIn {
    opacity: 1;
    transform: translateY(0);
  }
}

// 画像用イン
.transition-imgSlideIn {
  overflow: hidden;
  background-color: var(--color-primary);

  > img,
  > picture {
    display: block;
    opacity: 0;
    transition: transform 1.4s var(--ease-out-circ), opacity 1s;
    transform: scale(1.4);
    will-change: opacity, transform;
  }

  &::after {
    @include full-fit;

    z-index: 10;
    display: block;
    content: "";
    background-color: var(--color-base);
    transition: transform 1.2s var(--ease-out-circ);
  }
}

[data-list-index].transition-imgSlideIn {
  --delay: calc(var(--list-index) * 0.1s);

  &.is-stagger {
    > img,
    > picture,
    &::after {
      transition-delay: var(--delay), var(--delay);
    }
  }

  @include mq($from: md) {
    &.is-stagger-md {
      > img,
      > picture,
      &::after {
        transition-delay: var(--delay), var(--delay);
      }
    }
  }
  @include mq($from: lg) {
    &.is-stagger-lg {
      > img,
      > picture,
      &::after {
        transition-delay: var(--delay), var(--delay);
      }
    }
  }
}

.js-is-loaded [data-scroll="in"].transition-imgSlideIn {
  > img,
  > picture {
    opacity: 1;
    transform: scale(1);
  }

  &::after {
    transform: translateY(101%);
  }
}
